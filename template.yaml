AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  The chameleon game

Parameters:
  ApiDomain:
    Type: String
    Description: The domain to use for this API

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Api:
    Cors:
      AllowMethods: "'OPTIONS,POST,GET'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,x-chameleon-personid'"
      AllowOrigin: "'*'"
  Function:
    Timeout: 30
    Runtime: dotnetcore2.1
    Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
      Variables:
        DYNAMO_DB_TABLE_NAME: !Ref ChameleonDynamoTable

Resources:
  ChameleonDomain:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: arn:aws:acm:us-east-1:350413574090:certificate/f316a1cb-dcb1-41a8-aa48-ea2ad9c1ab91
      DomainName: !Ref ApiDomain
      EndpointConfiguration: 
        Types: 
          - EDGE
  ChameleonDynamoTable: # The database must defined before the lambda functions
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: RoomCode
          AttributeType: S
      KeySchema: 
        - AttributeName: RoomCode
          KeyType: HASH
      ProvisionedThroughput: 
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TimeToLiveSpecification:
        AttributeName: TimeToLive
        Enabled: true
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: live
  ChameleonFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/ChameleonFunction/
      Handler: ChameleonFunction::ChameleonFunction.Function::FunctionHandler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ChameleonDynamoTable
      Events:
        AnyApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /{proxy+}
            Method: any
  DomainApiBasePathMapping:  
    Type: AWS::ApiGateway::BasePathMapping
    Properties: 
      DomainName: !Ref ApiDomain
      RestApiId: !Ref ApiGatewayApi
      Stage: live
    DependsOn: ApiGatewayApiliveStage

Outputs:
  ChameleonCloudFrontDomain:
    Description: "The CloudFront URL for this deployment"
    Value: !GetAtt ChameleonDomain.DistributionDomainName
